name: Build and Release Android App

on:
  push:
    branches:
      - master
    tags:
      - 'v*.*.*'
  workflow_dispatch:

permissions:
  contents: write
  actions: read
  packages: write
  pull-requests: write

jobs:
  build:
    runs-on: ubuntu-latest
    if: github.event_name == 'push' && !startsWith(github.ref, 'refs/tags/')
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      - name: Set up JDK 17
        uses: actions/setup-java@v4
        with:
          java-version: '17'
          distribution: 'temurin'
      - name: Configure repositories for GitHub Actions
        run: |
          mkdir -p ~/.gradle
          cat > ~/.gradle/init.gradle << 'EOF'
          allprojects {
              repositories.clear()
              repositories {
                  google()
                  mavenCentral()
                  gradlePluginPortal()
                  maven { url "https://jitpack.io" }
              }
          }
          settingsEvaluated { settings ->
              settings.pluginManagement {
                  repositories {
                      gradlePluginPortal()
                      google()
                      mavenCentral()
                  }
              }
          }
          EOF
      - name: Grant execute permission for gradlew
        run: chmod +x gradlew
      - name: Clean project
        run: ./gradlew clean --no-daemon
      - name: Build (Check only)
        run: ./gradlew compileDebugKotlin --no-daemon

  release:
    runs-on: ubuntu-latest
    if: github.event_name == 'push' && startsWith(github.ref, 'refs/tags/')
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      - name: Set up JDK 17
        uses: actions/setup-java@v4
        with:
          java-version: '17'
          distribution: 'temurin'
      - name: Configure repositories for GitHub Actions
        run: |
          mkdir -p ~/.gradle
          cat > ~/.gradle/init.gradle << 'EOF'
          allprojects {
              repositories.clear()
              repositories {
                  google()
                  mavenCentral()
                  gradlePluginPortal()
                  maven { url "https://jitpack.io" }
              }
          }
          settingsEvaluated { settings ->
              settings.pluginManagement {
                  repositories {
                      gradlePluginPortal()
                      google()
                      mavenCentral()
                  }
              }
          }
          EOF
      - name: Grant execute permission for gradlew
        run: chmod +x gradlew
      - name: Clean project
        run: ./gradlew clean --no-daemon
      - name: Build Debug APK
        run: ./gradlew assembleDebug --no-daemon
      - name: Build Release APK (unsigned)
        run: ./gradlew assembleRelease --no-daemon
      - name: Get version name
        id: version
        run: |
          VERSION_NAME=$(./gradlew -q printVersionName | tail -n 1)
          echo "version_name=$VERSION_NAME" >> $GITHUB_OUTPUT
          echo "Version: $VERSION_NAME"
      - name: Rename APK files
        run: |
          mv app/build/outputs/apk/debug/app-debug.apk app/build/outputs/apk/debug/SMSforwarder-${{ steps.version.outputs.version_name }}-debug.apk
          mv app/build/outputs/apk/release/app-release-unsigned.apk app/build/outputs/apk/release/SMSforwarder-${{ steps.version.outputs.version_name }}-release-unsigned.apk
      - name: Generate checksums
        run: |
          cd app/build/outputs/apk
          sha256sum debug/SMSforwarder-${{ steps.version.outputs.version_name }}-debug.apk > debug/SMSforwarder-${{ steps.version.outputs.version_name }}-debug-checksums.txt
          sha256sum release/SMSforwarder-${{ steps.version.outputs.version_name }}-release-unsigned.apk > release/SMSforwarder-${{ steps.version.outputs.version_name }}-release-checksums.txt
      - name: Create Release and Upload Assets
        uses: softprops/action-gh-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ github.ref_name }}
          name: SMSforwarder ${{ github.ref_name }}
          body: |
            ## SMSforwarder ${{ github.ref_name }} - 重大功能更新
            
            ### 📱 Android应用更新
            
            **版本**: ${{ steps.version.outputs.version_name }}
            **构建时间**: ${{ github.event.head_commit.timestamp }}
            **更新内容**: 双卡支持、兼容性检测、健康监控、高级配置管理
            
            ### 📦 下载
            
            - **Debug版本**: 用于测试和调试
            - **Release版本**: 生产环境使用(未签名)
            
            ### ✨ 功能特性
            
            - 🚀 自动SMS转发到邮箱
            - ⚙️ 智能转发规则配置  
            - 📊 详细统计信息
            - 📝 完整日志记录
            - 🎨 现代化Material Design界面
            
            ### 🆕 v1.0.6 新增功能
            
            - 🔄 **双卡设备支持**: 自动识别SIM卡槽和运营商信息
            - 🔍 **设备兼容性检测**: 智能评分系统 (0-100分)
            - ❤️ **定期健康检测**: 心跳监控和异常告警
            - ⚙️ **高级配置管理**: 批量导入/导出、智能验证
            - 📱 **SIM卡信息展示**: 实时状态和信号强度
            - 🛡️ **系统深度检测**: 后台能力和权限分析
            
            ### 🔒 安全说明
            
            Release版本为未签名APK，建议自行签名后使用。
            
            ### 📋 安装要求
            
            - Android 8.0+ (API 26+) - 覆盖95%+用户
            - SMS接收和读取权限
            - 电话状态权限 (双卡支持)
            - 网络和通知权限
            
          draft: false
          prerelease: false
          files: |
            app/build/outputs/apk/debug/SMSforwarder-${{ steps.version.outputs.version_name }}-debug.apk
            app/build/outputs/apk/release/SMSforwarder-${{ steps.version.outputs.version_name }}-release-unsigned.apk
            app/build/outputs/apk/debug/SMSforwarder-${{ steps.version.outputs.version_name }}-debug-checksums.txt
            app/build/outputs/apk/release/SMSforwarder-${{ steps.version.outputs.version_name }}-release-checksums.txt 